params {
  metadata {
    ensembl_assemblies {
      linked_databases = ['ensembl']
      process.command = 'rnac ensembl assemblies'
      inputs {
        connections = params.connection_file
        query = "$baseDir/files/import-data/ensembl/assemblies.sql"
        examples = "files/import-data/ensembl/example-locations.json"
        example_query = "files/import-data/ensembl/find-example.sql"
      }
    }

    ensembl_coordinates_systems {
      linked_databases = ['ensembl']
      process.command = 'rnac ensembl coordinate-systems'
      inputs {
        connections = params.connection_file
        query = "$baseDir/files/import-data/ensembl/coordinate-systems.sql"
      }
    }

    ensembl_proteins {
      linked_databases = ['ensembl', 'tarbase', 'lncbase']
      process.command = 'rnac ensembl proteins'
      inputs {
        connections = params.connection_file
        query = "$baseDir/files/import-data/ensembl/proteins.sql"
      }
    }

    ensembl_karyotypes {
      linked_databases = ['ensembl']
      process.command = 'rnac ensembl karyotypes'
      process.directives.memory = 8.GB
    }

    ensembl_compara {
      linked_databases = ['ensembl']
      process.command = 'rnac ensembl compara'
      inputs.fasta = 'ftp://ftp.ensembl.org/pub/current_emf/ensembl-compara/homologies/*.nt.fasta.gz'
      process.directives.memory = 8.GB
    }

    europepmc {
      always_run = true
      process {
        command = 'rnac europepmc index-xml'
        produces = 'references.db'
      }

      inputs {
        data {
          command = 'fetch europepmc'
          remote = 'http://europepmc.org/ftp/pmclitemetadata/PMCLiteMetadata.tgz'
          produces = "out"
        }
      }
    }

    dfam {
      inputs.dumps = 'http://www.dfam.org/web_download/Current_Release/database/dfam_live/'
    }

    taxonomy {
      always_run = true
      process.command = 'rnac ncbi taxonomy'

      inputs {
        data_files {
          command = 'fetch taxonomy'
          remote = 'ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz'
          produces = 'taxdump'
        }
      }
    }

    rfam_clans {
      linked_databases = ['ensembl', 'rfam']
      process.command = 'rnac rfam clans'
      inputs.mysql = (params.connections.rfam + [query: "$baseDir/files/import-data/rfam/clans.sql" ])
    }

    rfam_families {
      linked_databases = ['ensembl', 'rfam']
      process.command = 'rnac rfam families'
      inputs.mysql = (params.connections.rfam + [query: "$baseDir/files/import-data/rfam/families.sql" ])
    }

    rfam_ontology_terms {
      linked_databases = ['ensembl', 'rfam']
      process.command = 'rnac rfam ontology-terms'
      inputs.mysql = (params.connections.rfam + [query: "$baseDir/files/import-data/rfam/ontology-terms.sql" ])
    }
  }
}
