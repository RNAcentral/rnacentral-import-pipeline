#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

function usage() {
  status="${1:-1}"
  cat <<EOS
fetch <name> [arguments...]

This is the primary script to fetching data. It will
EOS
  exit $status
}

function fetch_generic() {
  local remote="$1"
  local pattern="$2"

  case "$remote" in
    ssh://* | scp://* )
      short="${remote:6}"
      scp "$short" .
      ;;

    /* )
      find "$remote" -name "$pattern" | xargs -I {} cp {} .
      ;;

    http://* | https://* )
      wget -O "$pattern" "$remote"
      ;;

    ftp://* )
      # wget doesn't play well with ** so we use lftp instead. Also, wget doesn't
      # like following symlinks, but lftp does. I should find a way to indicate
      # this to the pipeline.
      if [[ "$remote" =~ '**' ]]; then
        lftp -c "mget $remote"
      else
        if [[ "$pattern" =~ "*" ]]; then
          wget "$remote"
        else
          wget -O "$pattern" "$remote"
        fi
      fi
      ;;

    * )
      echo 1>&2 "Unknown remote URL to fetch: $remote"
      exit 1;;
  esac

  case "$remote" in
    *.tar.gz | *.tgz )
      find . -name '*.tar.gz' -or -name '*.tgz' | xargs -I {} tar xvf {} ;;
  esac
}

function fetch_grouped() {
  pattern="$(basename $1)"
  fetch_generic "$1" "$pattern"

  for fn in $pattern; do
    local species="$(echo "$fn" | cut -d. -f1)"
    local grouped="$species.grouped.dat.gz"
    cat "$fn" >> "$grouped"
  done
}

function fetch_quickgo() {
  local remote="$1"
  local output="$2"
  local filename="$(basename "$remote")"

  tmp="$(mktemp)"
  fetch_generic "$remote" "$filename"
  gzip -cd "$filename" > "$tmp"

  {
    head -1 "$tmp"
    grep -v '^!' "$tmp"
  } > "$output"
  rm "$tmp"
}

function fetch_url_file() {
  local remote_file="$1"
  local pattern="$2"
  if [[ "$pattern" =~ "*" ]]; then
    cat "$remote_file" | xargs -I {} wget {}
  else
    cat "$remote_file" | xargs -I {} wget -O - {} >> "$pattern"
  fi
}

function fetch_taxonomy() {
  local remote="$1"
  local output="$2"

  fetch_generic "$1" "*.dmp"
  [ -d "$output" ] || mkdir -p "$output"
  mv *.dmp "$output"
}

function fetch_europepmc() {
  local remote="$1"
  local output="$2"
  local name="$(basename "$remote")"

  fetch_generic "$remote" "$name"
  if [[ ! -d "$output" ]]; then
    mkdir -p "$output"
    mv out/*.xml "$output/"
  fi
}

[ $# -gt 0 ] || { usage 0; }

name="$1"
shift 1

case "$name" in
  "ensembl" | "ensembl_plants" )
    fetch_grouped "$@" ;;

  "generic" )
    fetch_generic "$@" ;;

  "url-file" )
    fetch_url_file "$@" ;;

  "quickgo" )
    fetch_quickgo "$@" ;;

  "europepmc" )
    fetch_europepmc "$@" ;;

  "taxonomy" )
    fetch_taxonomy "$@" ;;

  * )
    usage ;;
esac
