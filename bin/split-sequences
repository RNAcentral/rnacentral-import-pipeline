#!/usr/bin/env python

# -*- coding: utf-8 -*-

"""
Copyright [2009-2018] EMBL-European Bioinformatics Institute
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import os
import six

import click

from Bio import SeqIO


def chunked(handle, max_size):
    size = 0
    grouped = []
    sequences = SeqIO.parse(handle, 'fasta')
    for sequence in sequences:
        grouped.append(sequence)
        size += len(sequence)
        if size >= max_size:
            yield grouped
            size = len(sequence)
            grouped = []

    if grouped:
        yield grouped


@click.command()
@click.argument('fasta', type=click.File('r'))
@click.argument('max-size', type=float)
@click.argument('output', type=click.Path())
def main(fasta, max_size, output):
    for index, sequences in enumerate(chunked(fasta, max_size)):
        if not os.path.exists(output):
            os.makedirs(output)

        with open(os.path.join(output, 'part-%i.fasta' % index), 'w') as out:
            SeqIO.write(sequences, out, 'fasta')


if __name__ == "__main__":
    main()
